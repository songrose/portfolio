{"version":3,"sources":["components/Introduction.js","components/Projects.js","components/ExtraInfo.js","App.js","serviceWorker.js","index.js","img/Rose.jpg"],"names":["Introduction","props","className","src","me","alt","href","text","NightLight","url2","url","description","NotableAchievements","width","height","EcoQuest","f4x4x4","name","ExtraInfo","about_text","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"wOA8BeA,MAzBf,SAAsBC,GACpB,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKC,IAAIC,IAAI,OAAOH,UAAU,iBACnC,yBAAKA,UAAU,aACb,yCADF,6BAGE,uBAAGI,KAAM,wBAAT,UAHF,wEAI2C,IACzC,uBAAGA,KAAM,gDAAT,OAAiE,IALnE,sNASE,6BACA,6BACA,uBAAGA,KAAM,+BAAT,UACA,6BACA,uBAAGA,KAAM,yCAAT,YACA,6BACA,sCAfF,4B,yBCuDSN,MA1Df,SAAsBC,GACpB,OACE,yBAAKC,UAAU,sBACb,wCACA,6BACA,6BACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,yBAAKG,IAAI,iBAAiBF,IAAKI,EAAKC,WAAWC,OAE/C,yBAAKJ,IAAI,iBAAiBF,IAAKI,EAAKC,WAAWE,OAEjD,6BACE,2CACCH,EAAKC,WAAWG,YACjB,6BAEA,6BACA,qDACCJ,EAAKC,WAAWI,sBAGrB,6BACA,6BACA,yBAAKV,UAAU,0BACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEW,MAAO,IACPC,OAAQ,IACRJ,IAAI,iDAGR,yBAAKR,UAAU,gBACb,wCACCK,EAAKQ,SAASJ,cAGnB,6BACA,6BACA,yBAAKT,UAAU,wBACb,yBAAKC,IAAKI,EAAKS,OAAON,IAAKL,IAAI,YAC/B,yBAAKH,UAAU,kBACZ,IACD,4BAAKK,EAAKS,OAAOC,MAChBV,EAAKS,OAAOL,YACb,6BACA,6BACA,2BACE,uBAAGL,KAAK,wCAAR,oB,aC9BCY,MAhBf,WACE,OACE,yBAAKhB,UAAU,SACb,yBAAKA,UAAU,kBACb,yCACA,6BACCK,EAAKY,WAAW,GACjB,6BACA,6BACCZ,EAAKY,WAAW,GACjB,gCC+BOC,MAxCf,WACE,OACE,yBAAKlB,UAAU,OAmBb,yBAAKA,UAAU,aACb,6BADF,IACS,6BACP,uBAAGI,KAAM,iBACT,kBAAC,EAAD,MACA,6BAJF,IAIS,6BACP,uBAAGA,KAAM,aACT,kBAAC,EAAD,MACA,6BAPF,IAOS,6BACP,uBAAGA,KAAM,qBACT,kBAAC,EAAD,MACA,6BACA,6BACA,6BACA,yBAAKJ,UAAU,aAAf,2BChCYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,wCEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.99f56269.chunk.js","sourcesContent":["import React from \"react\";\r\nimport text from \"../text\";\r\nimport me from \"../img/Rose.jpg\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"../css/Introduction.css\";\r\nfunction Introduction(props) {\r\n  return (\r\n    <div className=\"align\">\r\n      <img src={me} alt=\"Rose\" className=\"picturesizer\" />\r\n      <div className=\"paragraph\">\r\n        <h3>Rose Song</h3>\r\n        I'm a recent graduate from\r\n        <a href={\"https://www.bcit.ca/\"}> BCIT </a> (British Columbia Institute\r\n        of Technology). I received my diploma in{\" \"}\r\n        <a href={\"https://www.bcit.ca/study/programs/5500dipma\"}>CST</a>{\" \"}\r\n        (Computer Systems Technology) which is a 2 year condensed diploma\r\n        program. My studies consisted of Software Development, Computer Science,\r\n        and Algorithms. Currently, I am seeking a job and open to opportunities.\r\n        <br />\r\n        <br />\r\n        <a href={\"https://github.com/songrose\"}>Github</a>\r\n        <br />\r\n        <a href={\"https://www.linkedin.com/in/songrose/\"}>Linkedin</a>\r\n        <br />\r\n        <b>Email: </b>rosesongtech@gmail.com\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport text from \"../text\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"../css/Projects.css\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nfunction Introduction(props) {\r\n  return (\r\n    <div className=\"container-projects\">\r\n      <h3>Projects</h3>\r\n      <hr />\r\n      <br />\r\n      <div className=\"project-list-cont\">\r\n        <div className=\"nightLight project-right\">\r\n          <div className=\"picture\">\r\n            <img alt=\"nightlightpic2\" src={text.NightLight.url2} />\r\n\r\n            <img alt=\"nightlightpic1\" src={text.NightLight.url} />\r\n          </div>\r\n          <div>\r\n            <h4>Night Light</h4>\r\n            {text.NightLight.description}\r\n            <br></br>\r\n\r\n            <br />\r\n            <b>Notable Achievements: </b>\r\n            {text.NightLight.NotableAchievements}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"ecoQuest project-right\">\r\n          <div className=\"ecoQuestVid\">\r\n            <ReactPlayer\r\n              width={400}\r\n              height={250}\r\n              url=\"https://www.youtube.com/watch?v=ZPsxTFwlcXM\"\r\n            />\r\n          </div>\r\n          <div className=\"ecoQuestDesc\">\r\n            <h4>EcoQuest</h4>\r\n            {text.EcoQuest.description}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"f4x4x4 project-right\">\r\n          <img src={text.f4x4x4.url} alt=\"4x4pict\"></img>\r\n          <div className=\"description4x4\">\r\n            {\" \"}\r\n            <h4>{text.f4x4x4.name}</h4>\r\n            {text.f4x4x4.description}\r\n            <br />\r\n            <br />\r\n            <b>\r\n              <a href=\"https://songrose.github.io/tictactoe\"> play here</a>\r\n            </b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport nav from \"react-materialize\";\r\nimport M from \"materialize-css\";\r\nimport text from \"../text\";\r\nimport \"../css/ExtraInfo.css\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\n\r\nfunction ExtraInfo() {\r\n  return (\r\n    <div className=\"align\">\r\n      <div className=\"paragraphextra\">\r\n        <h4>About Me.</h4>\r\n        <hr></hr>\r\n        {text.about_text[3]}\r\n        <br />\r\n        <br />\r\n        {text.about_text[4]}\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExtraInfo;\r\n","import React from \"react\";\nimport nav from \"react-materialize\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"./css/style.css\";\nimport Introduction from \"./components/Introduction\";\nimport Projects from \"./components/Projects\";\nimport ExtraInfo from \"./components/ExtraInfo\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*\n      <nav>\n        <div className=\"nav-wrapper sticky-nav nav-color\">\n          <a href=\"#!\" className=\"brand-logo center\"></a>\n          <ul className=\"left hide-on-med-and-down\">\n            <li>\n              <a href=\"#Introduction\">Introduction</a>\n            </li>\n            <li>\n              <a href=\"#Projects\">Projects</a>\n            </li>\n            <li>\n              <a href=\"#ExtraInformation\">Extra Information</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      */}\n      <div className=\"container\">\n        <br /> <br />\n        <a href={\"Introduction\"} />\n        <Introduction />\n        <br /> <br />\n        <a href={\"Projects\"}></a>\n        <Projects />\n        <br /> <br />\n        <a href={\"ExtraInformation\"}></a>\n        <ExtraInfo />\n        <br />\n        <br />\n        <br />\n        <div className=\"copyright\"> &copy; Rose Song 2020</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Rose.12852e95.jpg\";"],"sourceRoot":""}